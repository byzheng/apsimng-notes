title: "FrostHeatDamageFunctions"
output: html_document
draft: true
---


```{r setup, echo = FALSE}
setup_qmd()
```

This `FrostHeatDamageFunctions` function computes daily and cumulative damage ratios (0–1) for frost and heat by combining a temperature‑driven potential yield reduction (piecewise linear between lower/upper thresholds with a maximum reduction) and a growth‑stage sensitivity factor (piecewise linear). The result represents the expected fractional yield loss from extreme temperature events.

## Overview


The `FrostHeatDamageFunctions` function is developed to account for the effects of frost and heat stresses on yield reduction, which runs at the daily step separating with yield estimation. The damage function is the product of the potential yield reduction induced by extreme(i.e.frost and heat) events and the sensitivity of the yield reduction to the growth stage when the events occur.The potential ratio of yield reduction induced by a frost or heat event is a piece-wise linear function of daily minimum or maximum air temperature, respectively.The potential ratio of yield reduction ranges from 0 to 1 indicating mild to severe yield reduction induced by an extreme event. The function is described with three parameters including the lower and upper temperature thresholds and the maximum yield reduction. The sensitivity of yield reduction to the growth stage is a piece-wise linear function of the growth stage simulated by APSIM. The sensitivity ranges from 0 to 1 indicating the least to most sensitivity of yield reduction.The function has four parameters: the lower and upper growth stage thresholds of the sensitive period to frost or heat stress, and the lower and upper growth stage thresholds of the most sensitive period around flowering when sensitivity equals 1. The same function of sensitivity applies to both frost and heat stress but with different parameterizations.


## Inputs


The following inputs are required for the `FrostHeatDamageFunctions` function with default values for wheat and canola crops:

### Frost parameters

| Parameter (property) | Description | Wheat | Canola |
|---|---:|---:|---:|
| FrostLowTT | Lower temperature threshold for frost damage (°C) | -4.00 | -4.11 |
| FrostMaxReductionRatio | Yield reduction ratio at the lower threshold (0–1, max reduction) | 0.40 | 0.31 |
| FrostUpTT | Upper temperature threshold for frost damage (°C) | 1.00 | -0.75 |
| FrostMinReductionRatio | Yield reduction ratio at the upper threshold (0–1, min reduction) | 0.00 | 0.00 |
| FrostStartSensitiveGS | Start of the frost-sensitive growth stage period (GS units) | 6.49 | 7.22 |
| FrostStartMostSensitiveGS | Start of the most-sensitive period (sensitivity = 1) (GS units) | 8.00 | 7.33 |
| FrostEndMostSensitiveGS | End of the most-sensitive period (sensitivity = 1) (GS units) | 9.50 | 8.06 |
| FrostEndSensitiveGS | End of the frost-sensitive growth stage period (GS units) | 9.50 | 8.18 |

### Heat parameters

| Parameter (property) | Description | Wheat | Canola |
|---|---:|---:|---:|
| HeatLowTT | Lower temperature threshold for heat damage (°C) | 30.35 | 27.45 |
| HeatMinReductionRatio | Yield reduction ratio at the lower threshold (0–1, min reduction) | 0.00 | 0.00 |
| HeatUpTT | Upper temperature threshold for heat damage (°C) | 34.00 | 38.84 |
| HeatMaxReductionRatio | Yield reduction ratio at the upper threshold (0–1, max reduction) | 0.20 | 0.58 |
| HeatStartSensitiveGS | Start of the heat-sensitive growth stage period (GS units) | 7.28 | 5.58 |
| HeatStartMostSensitiveGS | Start of the most-sensitive period (sensitivity = 1) (GS units) | 7.48 | 6.26 |
| HeatEndMostSensitiveGS | End of the most-sensitive period (sensitivity = 1) (GS units) | 8.97 | 9.20 |
| HeatEndSensitiveGS | End of the heat-sensitive growth stage period (GS units) | 9.09 | 9.43 |

* **Reduction ratio** from 0 to 1 indicates no to full yield reduction,
* **Sensitivity** from 0 to 1 indicates no to full sensitivity to frost/heat damage.

The figures below illustrate the temperature response and growth stage sensitivity functions for frost and heat damage for both wheat and canola crops using the default parameters.

```{r example, fig.width=8, fig.height=6}
library(ggplot2)
library(patchwork)

# default parameters from selection
params <- list(
    Wheat = list(
        FrostLowTT = -4.0, FrostMaxReductionRatio = 0.4, FrostUpTT = 1.0, FrostMinReductionRatio = 0,
        FrostStartSensitiveGS = 6.4854544, FrostStartMostSensitiveGS = 8.0,
        FrostEndMostSensitiveGS = 9.4983302, FrostEndSensitiveGS = 9.4990961,
        HeatLowTT = 30.3459986, HeatMinReductionRatio = 0, HeatUpTT = 34.0000667, HeatMaxReductionRatio = 0.2031898,
        HeatStartSensitiveGS = 7.2832313, HeatStartMostSensitiveGS = 7.483232,
        HeatEndMostSensitiveGS = 8.9709024, HeatEndSensitiveGS = 9.0945434
    ),
    Canola = list(
        FrostLowTT = -4.108862, FrostMaxReductionRatio = 0.3050003, FrostUpTT = -0.7549879, FrostMinReductionRatio = 0,
        FrostStartSensitiveGS = 7.222864, FrostStartMostSensitiveGS = 7.329504,
        FrostEndMostSensitiveGS = 8.063452, FrostEndSensitiveGS = 8.181088,
        HeatLowTT = 27.45271, HeatMinReductionRatio = 0, HeatUpTT = 38.8354, HeatMaxReductionRatio = 0.5810167,
        HeatStartSensitiveGS = 5.578273, HeatStartMostSensitiveGS = 6.260291,
        HeatEndMostSensitiveGS = 9.200536, HeatEndSensitiveGS = 9.428058
    )
)

# create separate 2x2 figures (frost/heat × sensitivity/temperature) for each crop
for (crop in names(params)) {
    p <- params[[crop]]

    # local implementations (different names to avoid duplicating later helpers)
    frost_pot_fn <- function(t, low, up, maxR, minR) {
        out <- ifelse(t <= low, maxR,
                                    ifelse(t >= up, minR,
                                                 maxR + (t - low) * (minR - maxR) / (up - low)))
        pmin(pmax(out, 0), 1)
    }
    heat_pot_fn <- function(t, low, up, minR, maxR) {
        out <- ifelse(t <= low, minR,
                                    ifelse(t >= up, maxR,
                                                 minR + (t - low) * (maxR - minR) / (up - low)))
        pmin(pmax(out, 0), 1)
    }
    stage_sens_fn <- function(gs, s0, s1, e1, e0) {
        approx(x = c(s0, s1, e1, e0), y = c(0, 1, 1, 0), xout = gs, rule = 2)$y
    }

    temps_seq <- seq(-10, 40, by = 0.1)
    gs_seq    <- seq(0, 10, by = 0.01)

    pot_df_crop <- data.frame(
        temp = temps_seq,
        frost = frost_pot_fn(temps_seq, p$FrostLowTT, p$FrostUpTT, p$FrostMaxReductionRatio, p$FrostMinReductionRatio),
        heat  = heat_pot_fn(temps_seq, p$HeatLowTT, p$HeatUpTT, p$HeatMinReductionRatio, p$HeatMaxReductionRatio)
    )

    sens_df_crop <- data.frame(
        gs = gs_seq,
        frost = stage_sens_fn(gs_seq, p$FrostStartSensitiveGS, p$FrostStartMostSensitiveGS, p$FrostEndMostSensitiveGS, p$FrostEndSensitiveGS),
        heat  = stage_sens_fn(gs_seq, p$HeatStartSensitiveGS, p$HeatStartMostSensitiveGS, p$HeatEndMostSensitiveGS, p$HeatEndSensitiveGS)
    )

    # panels
    p_frost_sens <- ggplot(sens_df_crop, aes(gs, frost)) +
        geom_line(size = 1, color = "#1b9e77") +
        labs(x = "Growth stage (GS)", y = "Sensitivity (0–1)", title = "Frost: sensitivity") +
        theme_minimal() + ylim(0, 1) +
        xlim(c(p$FrostStartSensitiveGS - 0.5, p$FrostEndSensitiveGS + 0.5))

    p_heat_sens <- ggplot(sens_df_crop, aes(gs, heat)) +
        geom_line(size = 1, color = "#d95f02") +
        labs(x = "Growth stage (GS)", y = "Sensitivity (0–1)", title = "Heat: sensitivity") +
        theme_minimal() + ylim(0, 1) +
        xlim(c(p$HeatStartSensitiveGS - 0.5, p$HeatEndSensitiveGS + 0.5))

    p_frost_temp <- ggplot(pot_df_crop, aes(temp, frost)) +
        geom_line(size = 1, color = "#1b9e77") +
        labs(x = "Temperature (°C)", y = "Potential reduction (0–1)", title = "Frost: temperature response") +
        theme_minimal() + ylim(0, 1) +
        xlim(c(p$FrostLowTT - 2, p$FrostUpTT + 2))

    p_heat_temp <- ggplot(pot_df_crop, aes(temp, heat)) +
        geom_line(size = 1, color = "#d95f02") +
        labs(x = "Temperature (°C)", y = "Potential reduction (0–1)", title = "Heat: temperature response") +
        theme_minimal() + ylim(0, 1) +
        xlim(c(p$HeatLowTT - 2, p$HeatUpTT + 2))

    # assemble 2x2 (left = frost, right = heat; top = sensitivity, bottom = temperature)
    fig <- (p_frost_sens | p_heat_sens) / (p_frost_temp | p_heat_temp) +
        plot_layout(guides = "collect") & theme(legend.position = "none")
    print(fig + plot_annotation(title = crop))
}

```

## Methodology



## Events 


**Events Listened For**

These are signals or notifications that the function listens for from other parts of the simulation:

| Event          | Purpose                                                                                  |
|----------------|------------------------------------------------------------------------------------------|
| [Commencing](/docs/Models/Events.html#Commencing)   | Nothing to calculate at the start of the simulation |


**Events Raised to**

> No events are raised by this function.


## Properties


**Configurable and Reportable Properties**

> No configurable properties are available for this function.

**Read-Only Reportable Properties**

| Property             | Type    | Description                                                                 |
|----------------------|---------|-----------------------------------------------------------------------------|
| `OutputValueType`   | string  | The type of variable for sub-daily values as `air temperature`                      |



## User Interface



## Practical Example


## See Also

* **Source code:** [FrostHeatDamageFunctions.cs on GitHub](http://github.com/APSIMInitiative/ApsimX/blob/master/Models/Functions/FrostHeatDamageFunctions.cs)
