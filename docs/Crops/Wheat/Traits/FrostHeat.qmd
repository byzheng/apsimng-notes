---
title: "Frost and Heat Combined Stress"
output: html_document
---

The low temperature stresses (frost) can cause damage to wheat crops, particularly during sensitive growth stages such as flowering. Frost stress can lead to reduced grain yield and quality by affecting the development of reproductive organs and impairing physiological processes. The frost stress damage is simulated based on minimum air temperature and crop development stage in the [FrostHeatDamageFunction](/docs/Models/Functions/FrostHeatDamageFunctions.qmd).


## Overview

The `FrostHeatDamageFunctions` function is developed to account for the effects of frost and heat stresses on yield reduction, which runs at the daily step separating with yield estimation. See [FrostHeatDamageFunction](/docs/Models/Functions/FrostHeatDamageFunctions.qmd) for detail implementation.


[FrostHeatDamageFunction](/docs/Models/Functions/FrostHeatDamageFunctions.qmd) is validated for wheat using field experiments in Australia. See [Online ApsimX Repository](https://github.com/APSIMInitiative/ApsimX/tree/master/Tests/Simulation/DamageFunction/Wheat) for the validation configurations and data.




```{r example, fig.width=8, fig.height=6}
library(ggplot2)
library(patchwork)


# default parameters from selection
params <- list(
    Wheat = list(
        FrostLowTT = -4.0, FrostMaxReductionRatio = 0.4, FrostUpTT = 1.0, FrostMinReductionRatio = 0,
        FrostStartSensitiveGS = 6.4854544, FrostStartMostSensitiveGS = 8.0,
        FrostEndMostSensitiveGS = 9.4983302, FrostEndSensitiveGS = 9.4990961,
        HeatLowTT = 30.3459986, HeatMinReductionRatio = 0, HeatUpTT = 34.0000667, HeatMaxReductionRatio = 0.2031898,
        HeatStartSensitiveGS = 7.2832313, HeatStartMostSensitiveGS = 7.483232,
        HeatEndMostSensitiveGS = 8.9709024, HeatEndSensitiveGS = 9.0945434
    )
)

# create separate 2x2 figures (frost/heat × sensitivity/temperature) for each crop
for (crop in names(params)) {
    p <- params[[crop]]

    # local implementations (different names to avoid duplicating later helpers)
    frost_pot_fn <- function(t, low, up, maxR, minR) {
        out <- ifelse(t <= low, maxR,
                                    ifelse(t >= up, minR,
                                                 maxR + (t - low) * (minR - maxR) / (up - low)))
        pmin(pmax(out, 0), 1)
    }
    heat_pot_fn <- function(t, low, up, minR, maxR) {
        out <- ifelse(t <= low, minR,
                                    ifelse(t >= up, maxR,
                                                 minR + (t - low) * (maxR - minR) / (up - low)))
        pmin(pmax(out, 0), 1)
    }
    stage_sens_fn <- function(gs, s0, s1, e1, e0) {
        approx(x = c(s0, s1, e1, e0), y = c(0, 1, 1, 0), xout = gs, rule = 2)$y
    }

    temps_seq <- seq(-10, 40, by = 0.1)
    gs_seq    <- seq(0, 10, by = 0.01)

    pot_df_crop <- data.frame(
        temp = temps_seq,
        frost = frost_pot_fn(temps_seq, p$FrostLowTT, p$FrostUpTT, p$FrostMaxReductionRatio, p$FrostMinReductionRatio),
        heat  = heat_pot_fn(temps_seq, p$HeatLowTT, p$HeatUpTT, p$HeatMinReductionRatio, p$HeatMaxReductionRatio)
    )

    sens_df_crop <- data.frame(
        gs = gs_seq,
        frost = stage_sens_fn(gs_seq, p$FrostStartSensitiveGS, p$FrostStartMostSensitiveGS, p$FrostEndMostSensitiveGS, p$FrostEndSensitiveGS),
        heat  = stage_sens_fn(gs_seq, p$HeatStartSensitiveGS, p$HeatStartMostSensitiveGS, p$HeatEndMostSensitiveGS, p$HeatEndSensitiveGS)
    )

    # panels
    p_frost_sens <- ggplot(sens_df_crop, aes(gs, frost)) +
        geom_line(size = 1, color = "#1b9e77") +
        labs(x = "Growth stage (GS)", y = "Sensitivity (0–1)", title = "Frost: sensitivity") +
        theme_minimal() + ylim(0, 1) +
        xlim(c(p$FrostStartSensitiveGS - 0.5, p$FrostEndSensitiveGS + 0.5))

    p_heat_sens <- ggplot(sens_df_crop, aes(gs, heat)) +
        geom_line(size = 1, color = "#d95f02") +
        labs(x = "Growth stage (GS)", y = "Sensitivity (0–1)", title = "Heat: sensitivity") +
        theme_minimal() + ylim(0, 1) +
        xlim(c(p$HeatStartSensitiveGS - 0.5, p$HeatEndSensitiveGS + 0.5))

    p_frost_temp <- ggplot(pot_df_crop, aes(temp, frost)) +
        geom_line(size = 1, color = "#1b9e77") +
        labs(x = "Temperature (°C)", y = "Potential reduction (0–1)", title = "Frost: temperature response") +
        theme_minimal() + ylim(0, 1) +
        xlim(c(p$FrostLowTT - 2, p$FrostUpTT + 2))

    p_heat_temp <- ggplot(pot_df_crop, aes(temp, heat)) +
        geom_line(size = 1, color = "#d95f02") +
        labs(x = "Temperature (°C)", y = "Potential reduction (0–1)", title = "Heat: temperature response") +
        theme_minimal() + ylim(0, 1) +
        xlim(c(p$HeatLowTT - 2, p$HeatUpTT + 2))

    # assemble 2x2 (left = frost, right = heat; top = sensitivity, bottom = temperature)
    fig <- (p_frost_sens | p_heat_sens) / (p_frost_temp | p_heat_temp) +
        plot_layout(guides = "collect") & theme(legend.position = "none")
    print(fig + plot_annotation(title = crop))
}

```